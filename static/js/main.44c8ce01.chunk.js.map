{"version":3,"sources":["components/FirstCreateFormScreen.js","components/SecondCreateFormScreen.js","components/ThirdCreateFormScreen.js","components/FourCreateFormScreen.js","pages/PageTemplate.js","pages/CreateUserPage.js","pages/CustomerSplashScreen.js","pages/CustomerViewPage.js","pages/FourOrFourError.js","pages/CustomerLoginPage.js","components/App.js","serviceWorker.js","index.js"],"names":["FirstCreateFormScreen","state","form1","familyName","firstName","lastName","dob","addressLine1","addressLine2","zipcode","phNo","gender","housingType","maritalStatus","onSubmit","bind","handleChange","onClick","event","preventDefault","this","props","handler","changeButton","propertyName","contact","target","value","setState","Row","className","Col","Form","Control","type","name","onChange","placeholder","required","id","as","selected","disabled","hidden","Button","Component","SecondCreateFormScreen","form2","highestEducation","primaryLanguage","Check","label","ThirdCreateFormScreen","form3","medicalInsType","insuranceHave","childCareType","employeeType","primaryDoctor","none","FourCreateFormScreen","form4","monthlyIncome","incomeType","console","log","for","vaue","PageTemplate","children","Navbar","bg","variant","Brand","href","Container","SwitchCard","curIndex","CreateUserPage","formData","currentSlideIndex","returnCurrentSlide","currentSlide","number","submittedor","fetch","HOSTNAME","method","headers","body","JSON","stringify","obj","stateObj","prop","nestedObj","key","CustomerSplashScreen","style","marginTop","textAlign","block","to","QRCode","require","CustomerViewPage","visitedDate","vistsLeft","badrequest","isvisitedDate","location","match","params","err","FourOrFourError","CustomerLoginPage","visitationForm","visitationType","dov","visitationData","then","response","json","responseJson","isError","alert","errorMsg","visitId","stringuser","Group","controlId","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44c8ce01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Form, Button} from 'react-bootstrap';\n\n\nexport default class FirstCreateFormScreen extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            form1: {\n                familyName: '',\n                firstName: '',\n                lastName: '',\n                dob: '',\n                addressLine1: '',\n                addressLine2: '',\n                zipcode: '',\n                phNo: '',\n                gender: '',\n                housingType: '',\n                maritalStatus: ''\n            }\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n\n    onSubmit(event) {\n        event.preventDefault();\n        this.props.handler(this.state);\n    }\n    onClick(event){\n        event.preventDefault();\n        this.props.handler(this.state);\n        this.props.changeButton(1);\n    }\n\n    handleChange(propertyName, event) {\n        const contact = this.state.form1;\n        contact[propertyName] = event.target.value;\n        this.setState({ form1: contact });\n    }\n\n    handleOptionChange(event) {\n        this.setState({\n            form1: {\n                maritalStatus: event.target.value\n            }\n        })\n    }\n\n\n    render() {\n        return (\n            <Row className=\"w-100\">\n                <Col className=\"d-flex flex-column justify-content-center\">\n                    <h2 className=\"text-center\">First Form</h2>\n                    <Form className=\"d-flex flex-column justify-content-center\">\n                        <Form.Control type=\"text\" name=\"familyName\" value={this.state.form1.familyName} onChange={this.handleChange.bind(this, 'familyName')} className=\"input-create-control mb-3\" placeholder=\"Family Name\" required />\n                        <Form.Control type=\"text\" name=\"firstname\" value={this.state.form1.firstName} onChange={this.handleChange.bind(this, 'firstName')} className=\"input-create-control mb-3\" placeholder=\"First Name\" required />\n                        <Form.Control type=\"text\" name=\"lastname\" value={this.state.form1.lastName} onChange={this.handleChange.bind(this, 'lastName')} className=\"input-create-control mb-3\" placeholder=\"Last Name\" required />\n                        <Form.Control type=\"date\" name=\"dateofbirth\" value={this.state.form1.dob} onChange={this.handleChange.bind(this, 'dob')} className=\"input-create-control mb-3\" required />\n                        <Form.Control type=\"text\" name=\"address\" value={this.state.form1.addressLine1} onChange={this.handleChange.bind(this, 'addressLine1')} className=\"input-create-control mb-3\" placeholder=\"123 easy street\" required />\n                        <Form.Control type=\"text\" name=\"apartment\" value={this.state.form1.addressLine2} onChange={this.handleChange.bind(this, 'addressLine2')} className=\"input-create-control mb-3\" placeholder=\"apartment 1234\" required />\n                        <Form.Control type=\"text\" name=\"zipcode\" id=\"create-zipcode\" value={this.state.form1.zipcode} onChange={this.handleChange.bind(this, 'zipcode')} className=\"input-create-control mb-3\" placeholder=\"zipcode\" required />\n                        <Form.Control type=\"text\" name=\"phonenumber\" id=\"phNo\" value={this.state.form1.phNo} onChange={this.handleChange.bind(this, 'phNo')} className=\"input-create-control mb-3\" placeholder=\"123-456-7890\" required />\n                        <Form.Control as=\"select\" name=\"gender\" value={this.state.form1.gender} onChange={this.handleChange.bind(this, 'gender')} className=\"input-create-control mb-3\" required>\n                            <option value=\"\" selected disabled hidden>Select your gender</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"housingtype\" value={this.state.form1.housingType} onChange={this.handleChange.bind(this, 'housingType')} className=\"input-create-control mb-3\" required>\n                            <option value=\"\" selected disabled hidden>Choose your housing type</option>\n                            <option value=\"ergency\">Emergency Housing Shelter/Mission/Transistional</option>\n                            <option value=\"evacuee\">Evacuee</option>\n                            <option value=\"ownhome\">Own Home</option>\n                            <option value=\"privaterental\">Private Rental</option>\n                            <option value=\"publichousing\">public housing</option>\n                            <option value=\"undisclosed\">Undisclosed</option>\n                            <option value=\"unhoused\">Unhoused</option>\n                            <option value=\"withfamily\">With family/friends</option>\n                            <option value=\"youthhome\">Youth Home/Shelter</option>\n                            <option value=\"refugee\">Refugee</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"marital-status\"  value={this.state.form1.housingType} onChange={this.handleChange.bind(this, 'maritalStatus')} className=\"input-create-control mb-3\" required>\n                            <option value=\"\" selected disabled hidden>Choose your martial status</option>\n                            <option value=\"single\">Single</option>\n                            <option value=\"married\">Married</option>\n                            <option value=\"divorced\">Divorced</option>\n                            <option value=\"seperated\">Seperated</option>\n                            <option value=\"windowed\">Windowed</option>\n                            <option value=\"undisclosed\">Undisclosed</option>\n                        </Form.Control>\n                        <Button className=\"input-create-control\" onClick={this.onClick}>Next</Button>\n                    </Form>\n                </Col>\n            </Row >\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\n\nexport default class SecondCreateFormScreen extends Component {\n\n\n    constructor() {\n        super();\n        this.state = {\n            form2: {\n                highestEducation: '',\n                primaryLanguage: ''\n            }\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        //this.props.handler(this.state);\n    }\n    onClick(event) {\n        event.preventDefault();\n        this.props.handler(this.state);\n        this.props.changeButton(2);\n    }\n\n    handleChange(propertyName, event) {\n        const contact = this.state.form2;\n        contact[propertyName] = event.target.value;\n        this.setState({ form2: contact });\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <h2 className=\"text-center\">Second Step</h2>\n                    <Form onSubmit={this.onSubmit}>\n                        <span className=\"input-checkmark\">Ethncity</span>\n                        <Form.Check name=\"ethnicity\" value=\"White/Anglo\" label=\"White/Anglo\" className=\"input-checkmark\" />\n                        <Form.Check name=\"ethnicity\" value=\"Hispanic/Latino\" label=\"Hispanic/Latino\" className=\"input-checkmark\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"American indian / Native American\" label=\"American Indian/Native American\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Asian\" label=\"Asian\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Aslaska Native / Aleut / Eskimo\" label=\"Aslaka/Aleut/ Eskimo\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Middle Eastern/ North African\" label=\"Middle Eastern / North African\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Pacific Islander\" label=\"Pacific Islander\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Other\" label=\"Other\" />\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Undisclosed\" label=\"Undisclosed\" />\n                        <span className=\"input-checkmark mt-2\" >Self Identify As</span>\n                        <Form.Check name=\"self-identify\" value=\"Disability\" label=\"Disability\" className=\"input-checkmark\" />\n                        <Form.Check name=\"self-identify\" value=\"Veteran\" label=\"Veteran\" className=\"input-checkmark\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"metal illness\" label=\"Mental Illness\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Pregnant\" label=\"Pregnant\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Postpartum\" label=\"Postpartum\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Breastfeeding\" label=\"Breast Feeding\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Undisclosed\" label=\"Undisclosed\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Other\" label=\"Other\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Eldery\" label=\"Eldery (62+)\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"LGBTQ\" label=\"LGBTQ\" />\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Female head of household\" label=\"Female head of household\" />\n                        <Form.Control as=\"select\" name=\"highest-education\" value={this.state.form2.highestEducation} onChange={this.handleChange.bind(this, 'highestEducation')} className=\"input-checkmark mt-2 mb-2\">\n                            <option value=\"\" selected disabled hidden>What's your education level?</option>\n                            <option value=\"grade08\">Grade 0-8</option>\n                            <option value=\"grade911\">Grade 9-11</option>\n                            <option value=\"highschooldiploma\">High School Diploma</option>\n                            <option value=\"ged\">GED</option>\n                            <option value=\"postsecondary\">Post Secondary</option>\n                            <option value=\"tradeschool\">Trade School</option>\n                            <option value=\"twoyeardegree\">2 year degree</option>\n                            <option value=\"fouryeardegree\">4 year degree</option>\n                            <option value=\"mastersdegree\">Masters degree</option>\n                            <option value=\"phd\">Phd</option>\n                            <option value=\"undisclosed\">Undisclosed</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"primary-language\" value={this.state.form2.primaryLanguage} onChange={this.handleChange.bind(this, 'primaryLanguage')} className=\"input-checkmark mb-2\">\n                            <option value=\"\" selected disabled hidden>Choose your primary language</option>\n                            <option value=\"english\">English</option>\n                            <option value=\"spanish\">Spanish</option>\n                            <option value=\"other\">Other</option>\n                        </Form.Control>\n                        <Button onClick={this.onClick} className=\"input-create-control\">Next</Button>\n                    </Form>\n                </Col>\n            </Row >\n\n\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nexport default class ThirdCreateFormScreen extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            form3: {\n                medicalInsType: '',\n                insuranceHave: '',\n                childCareType: '',\n                employeeType: '',\n                primaryDoctor: '',\n\n            }\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        //this.props.handler(this.state);\n    }\n    onClick(event) {\n        event.preventDefault();\n        this.props.handler(this.state);\n        this.props.changeButton(3);\n    }\n\n    handleChange(propertyName, event) {\n        const contact = this.state.form3;\n        contact[propertyName] = event.target.value;\n        this.setState({ form3: contact });\n    }\n\n    render() {\n        return (\n            <Row className=\"third-create-step\">\n                <Col>\n                    <h3>Third Step</h3>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Control as=\"select\" name=\"insurancehave\" value={this.state.form3.insuranceHave} onChange={this.handleChange.bind(this, 'insuranceHave')} className=\"input-create-control\">\n                            <option value=\"\" selected disabled hidden>Do you have insurance?</option>\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"primaryDoctor\" value={this.state.form3.primaryDoctor} onChange={this.handleChange.bind(this, 'primaryDoctor')} className=\"input-create-control\">\n                            <option value=\"\" selected disabled hidden> Do you have a primary care doctor?</option>\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"medicaltype\" value={this.state.form3.medicalInsType} onChange={this.handleChange.bind(this, 'medicalInsType')}>\n                            <option value=\"\" selected disabled hidden>What type of insurance do you have?</option>\n                            <option value=\"employer\">Employer</option>\n                            <option value=\"private\">Private</option>\n                            <option value=\"ahcss\">ahcss</option>\n                            <option value=\"indianhealthservices\">Indian Health Services</option>\n                            <option value=\"militarty\">Military</option>\n                            <option value=\"none\">none</option>\n                            <option value=\"other\">other</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"childCareType\" value={this.state.form3.childCareType} onChange={this.handleChange.bind(this, 'childCareType')}>\n                            <option value=\"mypartnerori\">My partner or I take care of my children at home</option>\n                            <option value=\"headstart\">Headstart</option>\n                            <option value=\"childcarecenter\">Child Care Center/ Preschool Program</option>\n                            <option value=\"familychildcarehome\">Family Child Care Home</option>\n                            <option value=\"relativeneighbor\">Relative/Neighbor or babysitter</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" name=\"emplyoeType\" value={this.state.form3.employeeType} onChange={this.handleChange.bind(this, 'employeeType')}>\n                            <option value=\"\" selected disabled none>What's your education level?</option>\n                            <option value=\"postsecondarystudent\">Post Secondary Student</option>\n                            <option value=\"fulltime\">Full Time</option>\n                            <option value=\"parttime\">Part Time</option>\n                            <option value=\"retired\">Retired</option>\n                            <option value=\"none\">None</option>\n                            <option value=\"undisclosed\">Undisclosed</option>\n                            <option value=\"other\">Other</option>\n                        </Form.Control>\n                        <Button onClick={this.onClick}>Next</Button>\n                    </Form>\n               \n                </Col>\n            </Row >\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Row,Col} from 'react-bootstrap';\n\nexport default class FourCreateFormScreen extends Component {\n\n    constructor(){\n        super();\n        this.state ={\n            form4: {\n                monthlyIncome: '',\n                incomeType: ''\n            }\n        \n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        this.props.handler(this.state);\n    }\n\n    handleChange(propertyName, event) {\n        // event.preventDefault();\n        console.log(\"event::\",event);\n        const contact = this.state.form4;\n        contact[propertyName] = event.target.value;\n        this.setState({ form4: contact });\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                <form onSubmit={this.onSubmit}>\n                    <h2>Fourth Screen</h2>\n                    <label for=\"monthly-amount\">Monthly Amount:</label>\n                    <input id=\"monthly-amount\" name=\"monthlyamount\" type=\"text\" \n                    value={this.state.form4.monthlyIncome} onChange={this.handleChange.bind(this, 'monthlyIncome')}/>\n                    <br></br>\n                    <label for=\"income-type\">Income Type:</label>\n                    <select id=\"income-type\" name=\"incometype\" \n                    value={this.state.form4.incomeType} onChange={this.handleChange.bind(this, 'incomeType')}>\n                    <option value=\"csfp\" >Commodity Supplement Food Program (CSFP)</option>\n                    <option value=\"wic\" > Supplemental Assistance WIC</option>\n                    <option value=\"snap\" >Supplemental Nurtition Assistance Proram (SNAP)</option>\n                    <option vaue=\"tanf\" >Cash Assistant (TANF)</option>\n                    <option value=\"deschildcare\" >DES Child Care Subsidy</option>\n                    <option value=\"qualityfirstscholarship\" >Quality First Scholarship</option>\n                    <option value=\"other\" >Other</option>\n                    </select>\n                    <button>Next</button>\n                </form>\n                </Col>\n\n            </Row>\n        )\n    }\n}\n","import React from 'react';\nimport { Container, Row,Col } from 'react-bootstrap'\nimport { Nav, Navbar } from  'react-bootstrap'\n\nconst PageTemplate = ({ children }) => (\n    <div id=\"page-template\">\n        <Navbar bg=\"primary\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">Chandler Care Center </Navbar.Brand>\n    {/* <Nav className=\"mr-auto\">\n    </Nav> */}\n  </Navbar>\n        <Container>\n            <Row id=\"logo-header\">\n                <Col></Col>\n            </Row>\n            {children}\n        </Container>\n    </div>\n);\n\nexport default PageTemplate;","import React, { Component } from 'react'\nimport FirstCreateFormScreen from '../components/FirstCreateFormScreen'\nimport SecondCreateFormScreen from '../components/SecondCreateFormScreen'\nimport ThirdCreateFormScreen from '../components/ThirdCreateFormScreen'\nimport FourCreateFormScreen from '../components/FourCreateFormScreen'\nimport PageTemplate from './PageTemplate';\nimport { Row, Col } from 'react-bootstrap';\nimport { FaUserPlus } from 'react-icons/fa';\n\nconst HOSTNAME = \"http://localhost:5000\";\n\n\n//switch for current slide\nconst SwitchCard= ({curIndex, changeButton,handler}) => {\n\n    switch (curIndex) {\n        case 0:\n            return (<FirstCreateFormScreen changeButton={changeButton} handler={handler}/>)\n        case 1:\n            return (<SecondCreateFormScreen changeButton={changeButton} handler={handler}/>)\n        case 2:\n            return (<ThirdCreateFormScreen changeButton={changeButton} handler={handler}/>)\n        case 3:\n            return (<FourCreateFormScreen changeButton={changeButton} handler={handler}/>)\n        default:\n            return (\n                <div>\n                    <FirstCreateFormScreen />\n                    <SecondCreateFormScreen />\n                    <ThirdCreateFormScreen />\n                    <FourCreateFormScreen />\n                </div>\n            );\n    }\n}\n\nexport default class CreateUserPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            formData: {},\n            currentSlideIndex: 0,\n            returnCurrentSlide:{}\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handler = this.handler.bind(this);\n        this.currentSlide = this.currentSlide.bind(this);\n    }\n\n    //stack -> keep current state\n    //switch for render component\n  \n\n    currentSlide(number){\n        this.setState({\n            currentSlideIndex : number\n        })\n    }\n\n\n\n\n    //on Submit\n    onSubmit(event) {\n\n        this.setState({\n            submittedor: \"Data Attempted to submit\"\n        })\n        console.log(this.state);\n        fetch(HOSTNAME + '/users', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.state)\n        });\n        event.preventDefault();\n    }\n\n    //Handler Function\n    handler(obj) {\n        let stateObj = this.state.formData;\n        for (var prop in obj) {\n            const nestedObj = obj[prop]\n            for (var key in nestedObj) {\n                stateObj[key] = nestedObj[key];\n            }\n\n        }\n        this.setState({ formData: stateObj });\n    }\n\n\n    render() {\n        return (\n            <PageTemplate>\n                {/* <form onSubmit={this.onSubmit}> */}\n                <Row>\n                    <Col>\n                        <div className=\"splash-screen\">\n                            <Row>\n                                <Col><span className=\"home-icon\"><FaUserPlus /></span> <h2 className=\"text-center\">Create User Page</h2></Col>\n                            </Row>\n                            <Row>\n                                <SwitchCard curIndex={this.state.currentSlideIndex} changeButton={this.currentSlide} handler={this.handler}/>\n                            </Row>\n\n                        </div>\n                    </Col>\n                </Row>\n                {/*  <FirstCreateFormScreen handler={this.handler} />*/}\n               \n                <ThirdCreateFormScreen handler={this.handler} />\n                <FourCreateFormScreen handler={this.handler} />\n                <button type=\"cancel\">Cancel</button>\n                <button type=\"submit\" onClick={this.onSubmit}>Submit</button>\n                <p>{this.state.submittedor}</p>\n                {/* </form> */}\n            </PageTemplate>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport PageTemplate from './PageTemplate';\nimport {FaHome} from 'react-icons/fa';\n\nexport default class CustomerSplashScreen extends Component {\n    render() {\n        return (\n            <PageTemplate>\n                 <Row>\n                    <Col style={{marginTop:\"25%\"}}>\n                        <div className=\"splash-screen shadow\">\n                            <div className=\"home-icon\" style={{textAlign: \"center\"}}>\n                                <FaHome />\n                            </div>\n                            <h3 style={{textAlign: \"center\"}}>Welcome</h3>\n                            <br></br>\n                            <div style={{textAlign: \"center\"}}>\n                                <Button variant=\"primary\" block> <Link to=\"/newuser\">New User</Link></Button>\n                            </div>\n                            <br></br>\n                            <div style={{textAlign: \"center\"}}>\n                                <Button variant=\"primary\" block><Link to=\"/login\">Returning User</Link></Button>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </PageTemplate>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PageTemplate from './PageTemplate';\nimport { Redirect } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nvar QRCode = require('qrcode.react')\n\nclass CustomerViewPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            familyName: \"\",\n            visitedDate: \"\",\n            vistsLeft: \"\",\n            badrequest: false\n        }\n    }\n\n    componentDidMount() {\n        try {\n            let isvisitedDate = this.props.location.state.visitedDate;\n\n            this.setState({\n                familyName: this.props.match.params.familyName,\n                visitedDate: isvisitedDate,\n                vistsLeft: this.props.location.state.vistsLeft\n            })\n\n        } catch (err) {\n            this.setState({\n                badrequest: true\n            });\n            console.log(\"user did not go through the proper-steps\")\n        }\n\n    }\n    render() {\n        if (this.state.badrequest) {\n            return <Redirect to=\"/whoops\" />\n        }\n        if (this.state.familyName === \"\") {\n            return <PageTemplate><p>Loading</p></PageTemplate>\n        } else {\n            return (\n                <PageTemplate>\n                    <div className=\"splash-screen shadow\" style={{textAlign:\"center\"}}>\n                        <Row>\n                            <Col>\n                                <h2>Welcome {this.state.familyName}</h2>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <p>User: {this.state.familyName}</p>\n                                <p>Visited Since: {this.state.visitedDate}</p>\n                                <p>Vists Left: {this.state.vistsLeft}</p>\n                               {/*  <QRComponent value=\"2c5ea4c0-4067-11e9-8bad-9b1deb4d3b7d\" /> */}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                            <Row>\n                                <Col>\n                                    <p>QR Code Scanner</p>\n                                </Col>\n                            </Row>\n                            \n                            <Row>\n                                <Col>\n                                    <QRCode value=\"2c5ea4c0-4067-11e9-8bad-9b1deb4d3b7d\" />\n                                </Col>\n                            </Row>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </PageTemplate>\n            )\n        }\n    }\n}\nexport default CustomerViewPage;\n","import React, { Component } from 'react'\n\nexport default class FourOrFourError extends Component {\n    render() {\n        return (\n            <div>\n                <p>This is not the page you are looking for.</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport PageTemplate from './PageTemplate';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst HOSTNAME = \"http://localhost:5000\"\n\nexport default class CustomerLoginPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            familyName: \"\",\n            visitedDate: \"09/20/2019\",\n            vistsLeft: \"2\",\n            visitationForm: {\n                familyName: '',\n                firstName: '',\n                lastName: '',\n                visitationType: '',\n                dov: ''\n            }\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    handleChange(propertyName, event) {\n        const contact = this.state.visitationForm;\n        contact[propertyName] = event.target.value;\n        this.setState({ visitationForm: contact });\n    }\n\n    onSubmit(event) {\n        const visitationData = this.state.visitationForm;\n        console.log(visitationData)\n\n        if(visitationData.visitationType == \"\"){\n            alert(\"Please mention Purpose of visit\");\n            return;\n        }\n            \n        event.preventDefault();\n        fetch(HOSTNAME +  '/visitation/create',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify(visitationData)\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            console.log(responseJson);\n            if(responseJson.isError == true){\n                alert(responseJson.errorMsg);\n            } else {\n                alert(responseJson.visitId)\n            }\n        });\n    }\n    onClick(event, stringuser) {\n        console.log(\"Current Event\" + event);\n        console.log(\"Current User\" + stringuser);\n    }\n    render() {\n        return (\n            <PageTemplate>\n                <Row className=\"align-items-center justify-content-center\" style={{marginTop:\"25%\", textAlign:\"center\"}}>\n                    <Col className=\"w-100\">\n                        <form onSubmit={this.onSubmit} id=\"familyName-form\" className=\"w-100\">\n                            <Form.Control id=\"id-familyName\" type=\"text\" name=\"id-familyName\" placeholder=\"family name\" className=\"mb-2\" \n                            value={this.state.visitationForm.familyName} onChange={this.handleChange.bind(this, 'familyName')} required/>\n\n                            <Form.Control id=\"id-firstName\" type=\"text\" name=\"id-firstName\" placeholder=\"first name\" className=\"mb-2\" \n                            value={this.state.visitationForm.firstName} onChange={this.handleChange.bind(this, 'firstName')} required/>\n\n                            <Form.Control id=\"id-lastName\" type=\"text\" name=\"id-lastName\" placeholder=\"last name\" className=\"mb-2\" \n                            value={this.state.visitationForm.lastName} onChange={this.handleChange.bind(this, 'lastName')} required/>\n\n                            <Form.Group controlId=\"form.visitationSelect\" required>\n                                <Form.Control as=\"select\" value={this.state.visitationForm.visitationType} onChange={this.handleChange.bind(this, 'visitationType')}>\n                                <option value=\"\">Purpose of Visit</option>\n                                <option value=\"AHCCCS\">AHCCCS</option>\n                                <option value=\"WIC\">WIC</option>\n                                <option value=\"Food Bank\">Food Bank</option>\n                                <option value=\"FTF\">FTF (Classes)</option>\n                                <option value=\"Diapers\">Diapers</option>\n                                <option value=\"Medical\">Medical</option>\n                                <option value=\"Dental\">Dental</option>\n                                <option value=\"Immunizations\">Immunizations</option>\n                                <option value=\"Vision and Hearing\">Vision and Hearing</option>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Control id=\"id-dov\" type=\"date\" name=\"id-dov\" placeholder=\"Visit Date\" className=\"mb-2\" \n                            value={this.state.visitationForm.dov} onChange={this.handleChange.bind(this, 'dov')} required/>\n                            \n                            <Button type=\"submit\" className=\"mb-3\" style={{marginTop:\"5%\"}}>Submit</Button>\n                            {/* <Link to={{ pathname: \"/user/\" + this.state.familyName, state: { visitedDate: this.state.visitedDate, vistsLeft: this.state.vistsLeft } }}>Submit</Link> */}\n                        </form>\n                    </Col>\n                </Row>\n            </PageTemplate>\n        )\n    }\n}\n","import React from 'react';\nimport '../style/App.css';\nimport CreateUserPage from '../pages/CreateUserPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CustomerSplashScreen from '../pages/CustomerSplashScreen';\nimport CustomerViewPage from '../pages/CustomerViewPage';\nimport FourOrFourError from '../pages/FourOrFourError';\nimport CustomerLoginPage from '../pages/CustomerLoginPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={CustomerSplashScreen} />\n        <Route  exact path=\"/user/:username\" component={CustomerViewPage} />\n        <Route path=\"/newuser\" component={CreateUserPage} />\n        <Route path=\"/login\" component={CustomerLoginPage} />\n        <Route component={FourOrFourError} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}